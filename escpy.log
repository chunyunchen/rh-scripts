+ set -o pipefail
+ [[ 1 -ne 1 ]]
+ [[ true = \f\a\l\s\e ]]
+ CLUSTER=true
+ ops=-ops
+ echo ops=-ops
ops=-ops
+ ARTIFACT_DIR=/tmp/origin-aggregated-logging
+ '[' '!' -d /tmp/origin-aggregated-logging ']'
+ TEST_DIVIDER=------------------------------------------
++ oc get -n test --output-version=v1beta3 '--template={{ .spec.portalIP }}' service frontend
+ testip=172.31.22.26
+ testport=5432
++ get_running_pod fluentd
++ lblname=
++ '[' -z '' ']'
++ lblname=component
++ oc get pods -l component=fluentd
++ awk -v sel=fluentd '$1 ~ sel && $3 == "Running" {print $1}'
+ fpod='logging-fluentd-gdbg1
logging-fluentd-x8uog'
++ mktemp
+ cfg=/tmp/tmp.jCNKmQHSrW
+ oc get template logging-fluentd-template -o yaml
+ sed '/- name: ES_COPY/,/value:/ s/value: .*$/value: "false"/'
+ oc replace -f -
template "logging-fluentd-template" replaced
+ restart_fluentd
+ oc delete daemonset logging-fluentd
daemonset "logging-fluentd" deleted
+ wait_for_pod_ACTION stop logging-fluentd-gdbg1 logging-fluentd-x8uog
+ ii=120
+ incr=10
+ '[' stop = start ']'
+ curpod=logging-fluentd-gdbg1
+ '[' 120 -gt 0 ']'
+ '[' stop = stop ']'
+ oc describe pod/logging-fluentd-gdbg1
+ '[' stop = start ']'
+ break
+ '[' 120 -le 0 ']'
+ return 0
+ oc process logging-fluentd-template
+ oc create -f -
daemonset "logging-fluentd" created
+ wait_for_pod_ACTION start fluentd
+ ii=120
+ incr=10
+ '[' start = start ']'
++ get_running_pod fluentd
++ lblname=
++ '[' -z '' ']'
++ lblname=component
++ oc get pods -l component=fluentd
++ awk -v sel=fluentd '$1 ~ sel && $3 == "Running" {print $1}'
+ curpod=logging-fluentd-wz3f4
+ '[' 120 -gt 0 ']'
+ '[' start = stop ']'
+ '[' start = start ']'
+ '[' -z logging-fluentd-wz3f4 ']'
+ break
+ '[' 120 -le 0 ']'
+ return 0
++ get_running_pod fluentd
++ lblname=
++ '[' -z '' ']'
++ lblname=component
++ oc get pods -l component=fluentd
++ awk -v sel=fluentd '$1 ~ sel && $3 == "Running" {print $1}'
+ fpod='logging-fluentd-fj1zk
logging-fluentd-wz3f4'
++ mktemp
+ origconfig=/tmp/tmp.Zh6WICmTiJ
+ oc get template logging-fluentd-template -o yaml
+ write_and_verify_logs 1
+ expected=1
++ get_running_pod frontend name '-n test'
++ head -1
++ '[' -z name ']'
++ oc get pods -l name=frontend -n test
++ awk -v sel=frontend '$1 ~ sel && $3 == "Running" {print $1}'
+ fpod=frontend-1-gf3ps
+ '[' -z frontend-1-gf3ps ']'
++ uuidgen
+ logmessage=48d52f0c-01fb-419f-aa1a-6c70531996ba
+ oc exec -n test frontend-1-gf3ps -- curl --connect-timeout 1 -s http://172.31.22.26:5432/48d52f0c-01fb-419f-aa1a-6c70531996ba
++ uuidgen
+ logmessage2=3158ac04-d8e9-41f1-b521-627eb2f9ffcd
+ chedulablenode=ec2-54-159-243-102.compute-1.amazonaws.com
+ ssh -i /home/chunchen/cfile/libra-new.pem -o identitiesonly=yes root@ec2-54-159-243-102.compute-1.amazonaws.com 'logger -i -p local6.info -t 3158ac04-d8e9-41f1-b521-627eb2f9ffcd 3158ac04-d8e9-41f1-b521-627eb2f9ffcd'
++ get_running_pod kibana
++ lblname=
++ '[' -z '' ']'
++ lblname=component
++ oc get pods -l component=kibana
++ awk -v sel=kibana '$1 ~ sel && $3 == "Running" {print $1}'
+ kpod=logging-kibana-1-i9rct
+ '[' -z logging-kibana-1-i9rct ']'
+ rc=0
+ myhost=logging-es
+ myproject=test
+ mymessage=48d52f0c-01fb-419f-aa1a-6c70531996ba
+ expected=1
+ wait_until_cmd_or_err test_count_expected test_count_err 20
+ let ii=20
+ interval=1
+ '[' 20 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 48d52f0c-01fb-419f-aa1a-6c70531996ba
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:48d52f0c-01fb-419f-aa1a-6c70531996ba'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 1
+ break
+ '[' 20 -le 0 ']'
+ return 0
+ '[' -n 1 ']'
+ echo good - found 1 records project test for 48d52f0c-01fb-419f-aa1a-6c70531996ba
good - found 1 records project test for 48d52f0c-01fb-419f-aa1a-6c70531996ba
+ myhost=logging-es-ops
+ myproject=.operations
+ mymessage=3158ac04-d8e9-41f1-b521-627eb2f9ffcd
+ expected=1
+ myfield=ident
+ wait_until_cmd_or_err test_count_expected test_count_err 20
+ let ii=20
+ interval=1
+ '[' 20 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident 3158ac04-d8e9-41f1-b521-627eb2f9ffcd
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:3158ac04-d8e9-41f1-b521-627eb2f9ffcd'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 1
+ break
+ '[' 20 -le 0 ']'
+ return 0
+ '[' -n 1 ']'
+ echo good - found 1 records project .operations for 3158ac04-d8e9-41f1-b521-627eb2f9ffcd
good - found 1 records project .operations for 3158ac04-d8e9-41f1-b521-627eb2f9ffcd
+ return 0
+ trap cleanup INT TERM EXIT
++ mktemp
+ nocopy=/tmp/tmp.xIqXSPSJxq
+ sed /_COPY/,/value/d /tmp/tmp.Zh6WICmTiJ
++ mktemp
+ envpatch=/tmp/tmp.WW13YS3Rtu
+ sed -n '/^        - env:/,/^          image:/ {
/^          image:/d
/^        - env:/d
/name: K8S_HOST_URL/,/value/d
s/ES_/ES_COPY_/
s/OPS_/OPS_COPY_/
p
}' /tmp/tmp.xIqXSPSJxq
+ cat
+ cat /tmp/tmp.xIqXSPSJxq
+ sed '/^        - env:/r /tmp/tmp.WW13YS3Rtu'
+ oc replace -f -
template "logging-fluentd-template" replaced
+ rm -f /tmp/tmp.WW13YS3Rtu /tmp/tmp.xIqXSPSJxq
+ restart_fluentd
+ oc delete daemonset logging-fluentd
daemonset "logging-fluentd" deleted
+ wait_for_pod_ACTION stop frontend-1-gf3ps
+ ii=120
+ incr=10
+ '[' stop = start ']'
+ curpod=frontend-1-gf3ps
+ '[' 120 -gt 0 ']'
+ '[' stop = stop ']'
+ oc describe pod/frontend-1-gf3ps
+ '[' stop = start ']'
+ break
+ '[' 120 -le 0 ']'
+ return 0
+ oc process logging-fluentd-template
+ oc create -f -
daemonset "logging-fluentd" created
+ wait_for_pod_ACTION start fluentd
+ ii=120
+ incr=10
+ '[' start = start ']'
++ get_running_pod fluentd
++ lblname=
++ '[' -z '' ']'
++ lblname=component
++ oc get pods -l component=fluentd
++ awk -v sel=fluentd '$1 ~ sel && $3 == "Running" {print $1}'
+ curpod=logging-fluentd-jqwfu
+ '[' 120 -gt 0 ']'
+ '[' start = stop ']'
+ '[' start = start ']'
+ '[' -z logging-fluentd-jqwfu ']'
+ break
+ '[' 120 -le 0 ']'
+ return 0
++ get_running_pod fluentd
++ lblname=
++ '[' -z '' ']'
++ lblname=component
++ oc get pods -l component=fluentd
++ awk -v sel=fluentd '$1 ~ sel && $3 == "Running" {print $1}'
+ fpod='logging-fluentd-jqwfu
logging-fluentd-usuqq'
+ write_and_verify_logs 2
+ expected=2
++ get_running_pod frontend name '-n test'
++ lblname=name
++ '[' -z name ']'
++ oc get pods -l name=frontend -n test
++ awk -v sel=frontend '$1 ~ sel && $3 == "Running" {print $1}'
+ fpod=frontend-1-gf3ps
+ '[' -z frontend-1-gf3ps ']'
++ uuidgen
+ logmessage=62f73a4e-ac67-4c02-8a49-b2fed2fd5187
+ oc exec -n test frontend-1-gf3ps -- curl --connect-timeout 1 -s http://172.31.22.26:5432/62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ uuidgen
+ logmessage2=fb84b0a5-8d5f-45f9-be35-c9033a826891
+ chedulablenode=ec2-54-159-243-102.compute-1.amazonaws.com
+ ssh -i /home/chunchen/cfile/libra-new.pem -o identitiesonly=yes root@ec2-54-159-243-102.compute-1.amazonaws.com 'logger -i -p local6.info -t fb84b0a5-8d5f-45f9-be35-c9033a826891 fb84b0a5-8d5f-45f9-be35-c9033a826891'
++ get_running_pod kibana
++ lblname=
++ '[' -z '' ']'
++ lblname=component
++ oc get pods -l component=kibana
++ awk -v sel=kibana '$1 ~ sel && $3 == "Running" {print $1}'
+ kpod=logging-kibana-1-i9rct
+ '[' -z logging-kibana-1-i9rct ']'
+ rc=0
+ myhost=logging-es
+ myproject=test
+ mymessage=62f73a4e-ac67-4c02-8a49-b2fed2fd5187
+ expected=2
+ wait_until_cmd_or_err test_count_expected test_count_err 20
+ let ii=20
+ interval=1
+ '[' 20 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 19 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 18 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 17 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 16 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ get_count_from_json
logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 15 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 14 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 13 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 12 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 11 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 10 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 9 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 8 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 7 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 6 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 5 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 4 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this poderror: error executing remote command: error executing command in container: Error executing in Docker Container: 28
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/usr/lib64/python2.7/json/__init__.py", line 326, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python2.7/json/decoder.py", line 384, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
+ nrecs=
+ test '' = 2
+ sleep 1
+ let ii=ii-1
+ '[' 3 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 2 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 1 -gt 0 ']'
+ test_count_expected
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 0 -gt 0 ']'
+ '[' 0 -le 0 ']'
+ test_count_err
+ myfield=message
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ echo Error: found 1 for project test message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187 - expected 2
Error: found 1 for project test message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187 - expected 2
+ for thetype in _count _search
+ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _count message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
+ python -mjson.tool
+ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_count?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod{
    "_shards": {
        "failed": 0, 
        "successful": 5, 
        "total": 5
    }, 
    "count": 1
}
+ for thetype in _count _search
+ curl_es_from_kibana logging-kibana-1-i9rct logging-es test _search message 62f73a4e-ac67-4c02-8a49-b2fed2fd5187
+ python -mjson.tool
+ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es:9200/test*/_search?q=message:62f73a4e-ac67-4c02-8a49-b2fed2fd5187'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod{
    "_shards": {
        "failed": 0, 
        "successful": 5, 
        "total": 5
    }, 
    "hits": {
        "hits": [
            {
                "_id": "AVcI_GiH1Ccr5DwbaOhd", 
                "_index": "test.3d843a05-7567-11e6-a9e1-0e584072d231.2016.09.08", 
                "_score": 1.7622192, 
                "_source": {
                    "docker_container_id": "db87904fc20a382382a6529cbce2d12970e7caaf0517b71b3654f3226bc80476", 
                    "hostname": "ip-172-18-14-36.ec2.internal", 
                    "kubernetes_container_name": "ruby-helloworld", 
                    "kubernetes_host": "ip-172-18-14-36.ec2.internal", 
                    "kubernetes_labels_app": "ruby-helloworld-sample", 
                    "kubernetes_labels_deployment": "frontend-1", 
                    "kubernetes_labels_deploymentconfig": "frontend", 
                    "kubernetes_labels_name": "frontend", 
                    "kubernetes_namespace_id": "3d843a05-7567-11e6-a9e1-0e584072d231", 
                    "kubernetes_namespace_name": "test", 
                    "kubernetes_pod_id": "44ee3151-7590-11e6-a9e1-0e584072d231", 
                    "kubernetes_pod_name": "frontend-1-gf3ps", 
                    "message": "10.2.1.1 - - [08/Sep/2016 08:48:51] \"GET /62f73a4e-ac67-4c02-8a49-b2fed2fd5187 HTTP/1.1\" 404 18 0.0004\n", 
                    "time": "2016-09-08T08:48:51.675137908Z", 
                    "version": "1.3.0"
                }, 
                "_type": "fluentd"
            }
        ], 
        "max_score": 1.7622192, 
        "total": 1
    }, 
    "timed_out": false, 
    "took": 91
}
+ return 1
+ rc=1
+ myhost=logging-es-ops
+ myproject=.operations
+ mymessage=fb84b0a5-8d5f-45f9-be35-c9033a826891
+ expected=2
+ myfield=ident
+ wait_until_cmd_or_err test_count_expected test_count_err 20
+ let ii=20
+ interval=1
+ '[' 20 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 19 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 18 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 17 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 16 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 15 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 14 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 13 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 12 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 11 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 10 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 9 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 8 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 7 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 6 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 5 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 4 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 3 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 2 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 1 -gt 0 ']'
+ test_count_expected
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ test 1 = 2
+ sleep 1
+ let ii=ii-1
+ '[' 0 -gt 0 ']'
+ '[' 0 -le 0 ']'
+ test_count_err
+ myfield=ident
++ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
++ get_count_from_json
++ python -c 'import json, sys; print json.loads(sys.stdin.read())["count"]'
++ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod+ nrecs=1
+ echo Error: found 1 for project .operations message fb84b0a5-8d5f-45f9-be35-c9033a826891 - expected 2
Error: found 1 for project .operations message fb84b0a5-8d5f-45f9-be35-c9033a826891 - expected 2
+ for thetype in _count _search
+ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _count ident fb84b0a5-8d5f-45f9-be35-c9033a826891
+ python -mjson.tool
+ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_count?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod{
    "_shards": {
        "failed": 0, 
        "successful": 5, 
        "total": 5
    }, 
    "count": 1
}
+ for thetype in _count _search
+ curl_es_from_kibana logging-kibana-1-i9rct logging-es-ops .operations _search ident fb84b0a5-8d5f-45f9-be35-c9033a826891
+ python -mjson.tool
+ oc exec logging-kibana-1-i9rct -- curl --connect-timeout 1 -s -k --cert /etc/kibana/keys/cert --key /etc/kibana/keys/key 'https://logging-es-ops:9200/.operations*/_search?q=ident:fb84b0a5-8d5f-45f9-be35-c9033a826891'
defaulting container name to kibana, use 'oc describe po/logging-kibana-1-i9rct' cmd to see all containers in this pod{
    "_shards": {
        "failed": 0, 
        "successful": 5, 
        "total": 5
    }, 
    "hits": {
        "hits": [
            {
                "_id": "AVcI_GjviMYCqtu50qAz", 
                "_index": ".operations.2016.09.08", 
                "_score": 11.557408, 
                "_source": {
                    "hostname": "ip-172-18-14-36", 
                    "ident": "fb84b0a5-8d5f-45f9-be35-c9033a826891", 
                    "message": "fb84b0a5-8d5f-45f9-be35-c9033a826891", 
                    "pid": "23707", 
                    "time": "2016-09-08T04:48:55-04:00", 
                    "version": "1.3.0"
                }, 
                "_type": "fluentd"
            }
        ], 
        "max_score": 11.557408, 
        "total": 1
    }, 
    "timed_out": false, 
    "took": 19
}
+ return 1
+ rc=1
+ return 1
+ oc get events -o yaml
+ exit 1
+ cleanup
+ '[' '!' -f /tmp/tmp.Zh6WICmTiJ ']'
+ oc replace --force -f /tmp/tmp.Zh6WICmTiJ
template "logging-fluentd-template" deleted
template "logging-fluentd-template" replaced
+ rm -f /tmp/tmp.Zh6WICmTiJ
+ restart_fluentd
+ oc delete daemonset logging-fluentd
daemonset "logging-fluentd" deleted
+ wait_for_pod_ACTION stop frontend-1-gf3ps
+ ii=120
+ incr=10
+ '[' stop = start ']'
+ curpod=frontend-1-gf3ps
+ '[' 120 -gt 0 ']'
+ '[' stop = stop ']'
+ oc describe pod/frontend-1-gf3ps
+ '[' stop = start ']'
+ break
+ '[' 120 -le 0 ']'
+ return 0
+ oc process logging-fluentd-template
+ oc create -f -
daemonset "logging-fluentd" created
+ wait_for_pod_ACTION start fluentd
+ ii=120
+ incr=10
+ '[' start = start ']'
++ get_running_pod fluentd
++ lblname=
++ '[' -z '' ']'
++ lblname=component
++ oc get pods -l component=fluentd
++ awk -v sel=fluentd '$1 ~ sel && $3 == "Running" {print $1}'
+ curpod='logging-fluentd-m8s5w
logging-fluentd-vn1he'
+ '[' 120 -gt 0 ']'
+ '[' start = stop ']'
+ '[' start = start ']'
+ '[' -z 'logging-fluentd-m8s5w
logging-fluentd-vn1he' ']'
+ break
+ '[' 120 -le 0 ']'
+ return 0
